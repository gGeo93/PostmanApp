@page "/postman"
@inject IMainLogicMethods mainLogic
@inject RequestModel model

<PageTitle>Postman Api Call</PageTitle>

<h3>Postman</h3>
<br />
<EditForm Model="model" FormName="Postman" OnValidSubmit="RequestSent">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="url">URL</label>
        <InputText class="form-control" type="text" id="url" @bind-Value="model.Url"/>
    </div>
    <br />
    <div class="form-group">
        <label for="methodRequest">Method Request</label>
        <InputSelect class="form-control" id="methodRequest" @bind-Value="model.Method"> 
            <option value="GET">GET</option>
            <option value="POST">POST</option>
            <option value="PUT">PUT</option>
            <option value="PATCH">PATCH</option>
            <option value="DELETE">DELETE</option>
        </InputSelect>
    </div>
    <br />
    <div class="form-group">
        <label for="body">Main Body</label>
        <InputTextArea class="form-control" id="body" rows="10" @bind-Value="model.DataToSend"/>
    </div>
    <br />
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Send</button>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    RequestModel Model { get; set; } = new();

    protected override void OnParametersSet()
    {
        model.Url = Model.Url;
        model.Method = Model.Method;
    }
    
    private async Task RequestSent()
    {
        model.DataToSend = await mainLogic.GenericRequest(Model.Url, Model.DataToSend, Model.Method);
    }
}
